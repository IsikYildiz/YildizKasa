@{
    Layout = "_Layout";
}
@model SiparislerModel

<!DOCTYPE html>
<html>
    <head>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
        <style>
            .custom-bg {
                background-color: #4D527F !important;
            }
            .warning-message {
            color: #dc3545;
            background: #ffe5e8;
            padding: 12px;
            border-radius: 6px;
            margin-top: 10px;
            display: none;
            }
        </style>
    </head>
    <body>
<div class="container-fluid custom-bg min-vh-100 py-5">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Sipariş Detayları</h4>
                </div>
                <div class="card-body">
                    <!-- Kalan içerik aynı -->
                    <!-- Adres Seçimi -->
                    <div class="mb-4">
                        <h5 class="card-title">Teslimat Adresi</h5>
                        <label id="Uyarı" class="warning-message"></label>
                        <form class="mt-3">
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="radio" name="adres" id="adres1" value="@Model.Kullanicilar.Adres1">
                                <label class="form-check-label" for="adres1">
                                    @Model.Kullanicilar.Adres1
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="adres" id="adres2" value="@Model.Kullanicilar.Adres2">
                                <label class="form-check-label" for="adres2">
                                    @Model.Kullanicilar.Adres2
                                </label>
                            </div>
                        </form>
                    </div>

                    <!-- Ödeme Seçimi -->
                    <div class="mb-4">
                        <h5 class="card-title">Ödeme Yöntemi</h5>
                        <form class="mt-3">
                            @foreach(var kart in Model.Kredikartlari){
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="kart" id="kart@(kart.KartNo)" 
                                           value="@("*".PadLeft(kart.KartNo.Length - 4, '*') + kart.KartNo.Substring(kart.KartNo.Length - 4))">
                                    <label class="form-check-label" for="kart@(kart.KartNo)">
                                        <i class="fas fa-credit-card me-2"></i>
                                        @("*".PadLeft(kart.KartNo.Length - 4, '*') + kart.KartNo.Substring(kart.KartNo.Length - 4))
                                    </label>
                                </div>
                            }
                        </form>
                    </div>

                    <!-- Sepet Özeti -->
                    <div class="border-top pt-3">
                        <h5 class="card-title">Sipariş Özeti</h5>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Ürün</th>
                                        <th class="text-end">Fiyat</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach(var product in Model.SepetTam.Sepeturuns){
                                        <tr>
                                            <td>@product.urunAd</td>
                                            <td>@product.Adet</td>
                                            <td class="text-end">@Convert.ToInt32(@product.ToplamFiyat) ₺</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot class="table-light">
                                    <tr>
                                        <td><strong>Toplam (@Model.SepetTam.Sepets.UrunSayisi ürün)</strong></td>
                                        <td></td>
                                        <td class="text-end"><strong>@Convert.ToInt32(@Model.SepetTam.Sepets.SepetFİyati) ₺</strong></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>

                    <!-- Sipariş Butonu -->
                    <div class="text-end mt-4">
                        <label id="guvUyarı" class="warning-message"></label>
                        <input id="guvNo" type="number" placeholder="Kredi kartı güvenlik no">
                        <button class="btn btn-primary btn-lg" onclick="finishSiparis(event)">
                            <i class="fas fa-shopping-cart me-2"></i>
                            Siparişi Tamamla
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    async function finishSiparis(event){
        event.preventDefault();
        const warningLabel = document.getElementById("Uyarı");
        const warningLabelGuv = document.getElementById("guvUyarı");
        const adres=document.querySelector('input[name = "adres"]:checked');
        const kart=document.querySelector('input[name = "kart"]:checked');
        const guvno=document.getElementById("guvNo").value;
        if(adres==null){
            warningLabel.style.display="block";
            warningLabel.innerHTML="Lütfen adresi doğru seçin";
            return; 
        }
        else  if(kart==null){
            warningLabel.style.display="block";
            warningLabel.innerHTML="Lütfen bir kart seçin";
            return; 
        }
        else if(!guvno || guvno.length != 3 || isNaN(guvno)){
            warningLabelGuv.style.display="block";
            warningLabelGuv.innerHTML="Lütfen güvenlik numarasını doğru giriniz";
            return; 
        }
        const addresValue = adres.value;
        const kartValue = kart.value;
        if(addresValue==""){
            warningLabel.style.display="block"; 
            warningLabel.innerHTML="Lütfen adresi doğru seçin";
            return; 
        }
        const requestData = {
        cardNo: kartValue,
        secCode: parseInt(guvno),
        adres: addresValue,
        fiyat: parseInt('@Model.SepetTam.Sepets.SepetFİyati'),
        urunAdet: parseInt('@Model.SepetTam.Sepets.UrunSayisi')
        };
        try {
        const response = await fetch('@Url.Action("finishSiparis", "TransactionPage")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(requestData)
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const result = await response.json();
        
        if (result.success) {
            window.location.href = '@Url.Action("Siparisler", "TransactionPage")';
        } 
        else {
            warningLabelGuv.style.display = "block";
            warningLabelGuv.innerHTML = result.message || "İşlem başarısız";
        }
        } 
        catch (error) {
            console.error('Error:', error);
            warningLabelGuv.style.display = "block";
            warningLabelGuv.innerHTML = "İşlem sırasında bir hata oluştu";}
        }
</script>
</body>
</html>